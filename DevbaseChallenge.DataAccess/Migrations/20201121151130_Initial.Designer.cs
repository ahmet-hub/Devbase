// <auto-generated />
using DevbaseChallenge.DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevbaseChallenge.DataAccess.Migrations
{
    [DbContext(typeof(DevbaseChallengeContext))]
    [Migration("20201121151130_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevbaseChallenge.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Telefonlar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Televizyonlar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bilgisayarlar"
                        });
                });

            modelBuilder.Entity("DevbaseChallenge.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(20);

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Samsung S10 Plus ",
                            Price = 5.600m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Iphone X  ",
                            Price = 5.600m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Xioami Not 10 Plus",
                            Price = 3.505m,
                            Stock = 16
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Samsung 56 Inc Tv",
                            Price = 4.550m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Xioami 48 Inc Tv",
                            Price = 3.550m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Asus Laptop",
                            Price = 13.550m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Name = "Monster Laptop ",
                            Price = 7.500m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Name = "Msi Laptop ",
                            Price = 10.500m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("DevbaseChallenge.Core.Entities.Product", b =>
                {
                    b.HasOne("DevbaseChallenge.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
